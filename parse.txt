digraph {
36 [label="chunk:"];
35 [label="Function:"];
0 [label="funcname:fibonacci"];
35 -> 0;
1 [label="Namelist:"];
2 [label="Name:n"];
1 -> 2;
35 -> 1;
34 [label="chunk:"];
33 [label="ifelse:"];
10 [label="If:"];
6 [label="OP:<"];
4 [label="varlist:"];
3 [label="var:n"];
4 -> 3;
6 -> 4;
5 [label="Number:3"];
6 -> 5;
10 -> 6;
9 [label="Return:"];
8 [label="explist:"];
7 [label="Number:1"];
8 -> 7;
9 -> 8;
10 -> 9;
33 -> 10;
32 [label="Else:"];
31 [label="Return:"];
30 [label="explist:"];
29 [label="OP:+"];
19 [label="funccall:"];
12 [label="varlist:"];
11 [label="var:fibonacci"];
12 -> 11;
19 -> 12;
18 [label="args:"];
17 [label="explist:"];
16 [label="OP:-"];
14 [label="varlist:"];
13 [label="var:n"];
14 -> 13;
16 -> 14;
15 [label="Number:1"];
16 -> 15;
17 -> 16;
18 -> 17;
19 -> 18;
29 -> 19;
28 [label="funccall:"];
21 [label="varlist:"];
20 [label="var:fibonacci"];
21 -> 20;
28 -> 21;
27 [label="args:"];
26 [label="explist:"];
25 [label="OP:-"];
23 [label="varlist:"];
22 [label="var:n"];
23 -> 22;
25 -> 23;
24 [label="Number:2"];
25 -> 24;
26 -> 25;
27 -> 26;
28 -> 27;
29 -> 28;
30 -> 29;
31 -> 30;
32 -> 31;
33 -> 32;
34 -> 33;
35 -> 34;
36 -> 35;
54 [label="for:"];
55 [label="var:n"];
54 -> 55;
37 [label="Number:1"];
54 -> 37;
38 [label="Number:16"];
54 -> 38;
53 [label="chunk:"];
52 [label="funccall:"];
41 [label="varlist:"];
39 [label="var:io"];
40 [label="var:write"];
39 -> 40;
41 -> 39;
52 -> 41;
51 [label="args:"];
49 [label="explist:"];
48 [label="funccall:"];
43 [label="varlist:"];
42 [label="var:fibonacci"];
43 -> 42;
48 -> 43;
47 [label="args:"];
46 [label="explist:"];
45 [label="varlist:"];
44 [label="var:n"];
45 -> 44;
46 -> 45;
47 -> 46;
48 -> 47;
49 -> 48;
50 [label="String: "];
49 -> 50;
51 -> 49;
52 -> 51;
53 -> 52;
54 -> 53;
36 -> 54;
62 [label="funccall:"];
58 [label="varlist:"];
56 [label="var:io"];
57 [label="var:write"];
56 -> 57;
58 -> 56;
62 -> 58;
61 [label="args:"];
60 [label="explist:"];
59 [label="String:\n"];
60 -> 59;
61 -> 60;
62 -> 61;
36 -> 62;
}
